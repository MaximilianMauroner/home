---
import TagView from "@/components/TagView";
import DefaultLayout from "@/layouts/DefaultLayout.astro";
import { getTags } from "@/utils/helpers";
import { getCollection } from "astro:content";

interface Props {
  tag: string;
}

const { tag } = Astro.params;

const blogs = await getCollection("blog", ({ data }) => {
  return import.meta.env.PROD ? data.published === true : true;
});
const logs = await getCollection("log", ({ data }) => {
  return import.meta.env.PROD ? data.published === true : true;
});

const tags = getTags(blogs, logs);

export async function getStaticPaths() {
  const blogs = await getCollection("blog", ({ data }) => {
    return import.meta.env.PROD ? data.published === true : true;
  });
  const logs = await getCollection("log", ({ data }) => {
    return import.meta.env.PROD ? data.published === true : true;
  });
  const tags = getTags(blogs, logs);
  const allTagNames = tags.keys();
  return [...allTagNames].map((tag) => ({ params: { tag } }));
}
---

<DefaultLayout title={tag} description={tag}>
  <TagView
    tags={tags}
    blogs={blogs}
    logs={logs}
    preSelectedTag={tag}
    client:load
  />
</DefaultLayout>
