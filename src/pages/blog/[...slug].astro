---
import { getBlogs } from "@/utils/server/content";
import { render } from "astro:content";
import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";

dayjs.extend(utc);

export async function getStaticPaths() {
  const blogEntries = await getBlogs();
  return blogEntries.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;

if (entry.data.published !== true && import.meta.env.PROD) {
  throw Astro.redirect("/404");
}

const { Content, remarkPluginFrontmatter } = await render(entry);
const lastModified = dayjs(remarkPluginFrontmatter.lastModified)
  .utc()
  .format("HH:mm:ss DD MMMM YYYY UTC");

const schema = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: entry.data.title,
  description: entry.data.description,
  keywords: entry.data.tags.join(", "),
  image: entry.data.image ? new URL(entry.data.image, Astro.site) : undefined,
  author: {
    "@type": "Person",
    name: "Maximilian Mauroner",
    url: "https://www.mauroner.net",
  },
  dateModified: lastModified,
  datePublished: entry.data.releaseDate,
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": new URL(Astro.url.pathname, Astro.site),
  },
};
---

<script
  is:inline
  type="application/ld+json"
  set:html={JSON.stringify(schema)}
/>
<Content />
